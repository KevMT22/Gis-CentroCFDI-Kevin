@model API.Operaciones.Facturacion.FacturaRecibida

@{
    ViewBag.Title = "Reporte de Documento Recibido";
    ViewBag.Clase = Model.Desplegado;
}


<div class="card card-flush py-4">
    <!--begin::Card header-->
    <div class="card-header">
        <div class="card-title">
            <h2>@ViewBag.Title - @ViewBag.Clase</h2>
        </div>
    </div>
    <!--end::Card header-->
    <!--begin::Card body-->
    <div class="card-body pt-0 ">
        <div class="row">
            <div class="pb-10">
                <!--begin::Information-->
                <div class="d-flex align-items-center rounded py-5 px-5 bg-light-primary">
                    <!--begin::Icon-->
                    <!--begin::Svg Icon | path: icons/duotune/general/gen044.svg-->
                    <span class="svg-icon svg-icon-3x svg-icon-primary me-5">
                        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
                            <rect opacity="0.3" x="2" y="2" width="20" height="20" rx="10" fill="currentColor"></rect>
                            <rect x="11" y="14" width="7" height="2" rx="1" transform="rotate(-90 11 14)" fill="currentColor"></rect>
                            <rect x="11" y="17" width="2" height="2" rx="1" transform="rotate(-90 11 17)" fill="currentColor"></rect>
                        </svg>
                    </span>
                    <!--end::Svg Icon-->
                    <!--end::Icon-->
                    <!--begin::Description-->
                    <div class="text-gray-700 fw-bold fs-5">
                        Información

                    </div>
                    <!--end::Description-->
                </div>
                <!--end::Information-->
            </div>
        </div>
        @using (Html.BeginForm())
        {
    @Html.AntiForgeryToken()
                    <div class="form deshabilitar row">
                        @Html.ValidationSummary(true, "", new { @class = "text-danger" })

                        <div class="clearfix"></div>

                        <div class="sub-title">
                            <span class="fa fa-bars text-muted"></span> Entidades
                        </div>

                        <hr />

                        <div class="form-group col-xs-12 col-sm-6 col-md-4 col-lg-3">
                            @Html.LabelFor(model => model.CentroCostoId, htmlAttributes: new { @class = "form-label" })
                            @Html.EditorFor(model => model.CentroCosto.Nombre, new { htmlAttributes = new { @class = "form-control mb-2", @readonly = "readonly" } })
                            @Html.ValidationMessageFor(model => model.CentroCostoId, "", new { @class = "text-danger" })
                        </div>

                        <div class="form-group col-xs-12 col-sm-6 col-md-4 col-lg-3">
                            @Html.LabelFor(model => model.EmisorId, htmlAttributes: new { @class = "form-label" })
                            @Html.EditorFor(model => model.Emisor.RazonSocial, new { htmlAttributes = new { @class = "form-control mb-2", @readonly = "readonly" } })
                            @Html.ValidationMessageFor(model => model.EmisorId, "", new { @class = "text-danger" })
                        </div>

                        <div class="form-group col-xs-12 col-sm-6 col-md-4 col-lg-3">
                            @Html.LabelFor(model => model.ReceptorId, htmlAttributes: new { @class = "form-label" })
                            @Html.EditorFor(model => model.Receptor.RazonSocial, new { htmlAttributes = new { @class = "form-control mb-2", @readonly = "readonly" } })
                            @Html.ValidationMessageFor(model => model.ReceptorId, "", new { @class = "text-danger" })
                        </div>

                        <div class="clearfix"></div>

                        <div class="sub-title">
                            <span class="fa fa-bars text-muted"></span> Folios
                        </div>

                        <hr />

                        <div class="form-group col-xs-12 col-sm-6 col-md-4 col-lg-3">
                            @Html.LabelFor(model => model.Uuid, htmlAttributes: new { @class = "form-label" })
                            @Html.EditorFor(model => model.Uuid, new { htmlAttributes = new { @class = "form-control mb-2", @readonly = "readonly" } })
                            @Html.ValidationMessageFor(model => model.Uuid, "", new { @class = "text-danger" })
                        </div>

                        <div class="form-group col-xs-12 col-sm-6 col-md-4 col-lg-3">
                            @Html.LabelFor(model => model.Serie, htmlAttributes: new { @class = "form-label" })
                            @Html.EditorFor(model => model.Serie, new { htmlAttributes = new { @class = "form-control mb-2", @readonly = "readonly" } })
                            @Html.ValidationMessageFor(model => model.Serie, "", new { @class = "text-danger" })
                        </div>

                        <div class="form-group col-xs-12 col-sm-6 col-md-4 col-lg-3">
                            @Html.LabelFor(model => model.Folio, htmlAttributes: new { @class = "form-label" })
                            @Html.EditorFor(model => model.Folio, new { htmlAttributes = new { @class = "form-control mb-2", @readonly = "readonly" } })
                            @Html.ValidationMessageFor(model => model.Folio, "", new { @class = "text-danger" })
                        </div>

                        <div class="clearfix"></div>

                        <div class="sub-title">
                            <span class="fa fa-bars text-muted"></span> Información General
                        </div>

                        <hr />

                        <div class="form-group col-xs-12 col-sm-6 col-md-4 col-lg-3">
                            @Html.LabelFor(model => model.Fecha, htmlAttributes: new { @class = "form-label" })
                            @Html.EditorFor(model => model.Fecha, new { htmlAttributes = new { @class = "form-control mb-2", @readonly = "readonly" } })
                            @Html.ValidationMessageFor(model => model.Fecha, "", new { @class = "text-danger" })
                        </div>

                        <div class="form-group col-xs-12 col-sm-6 col-md-4 col-lg-3">
                            @Html.LabelFor(model => model.TipoComprobante, htmlAttributes: new { @class = "form-label" })
                            @Html.EnumDropDownListSpecialFor(model => model.TipoComprobante)
                            @Html.ValidationMessageFor(model => model.TipoComprobante, "", new { @class = "text-danger" })
                        </div>

                        @if (Model.TipoComprobante != API.Enums.c_TipoDeComprobante.P)
                        {
        <div class="form-group col-xs-12 col-sm-6 col-md-4 col-lg-3">
            @Html.LabelFor(model => model.MetodoPago, htmlAttributes: new { @class = "form-label" })
            @Html.EnumDropDownListSpecialFor(model => model.MetodoPago)
            @Html.ValidationMessageFor(model => model.MetodoPago, "", new { @class = "text-danger" })
        </div>

                            <div class="form-group col-xs-12 col-sm-6 col-md-4 col-lg-3">
                                @Html.LabelFor(model => model.FormaPago, htmlAttributes: new { @class = "form-label" })
                                @Html.EditorFor(model => model.FormaPago, new { htmlAttributes = new { @class = "form-control mb-2", @readonly = "readonly" } })
                                @Html.ValidationMessageFor(model => model.FormaPago, "", new { @class = "text-danger" })
                            </div>}

                        <div class="form-group col-xs-12 col-sm-6 col-md-4 col-lg-3">
                            @Html.LabelFor(model => model.Moneda, htmlAttributes: new { @class = "form-label" })
                            @Html.EnumDropDownListSpecialFor(model => model.Moneda)
                            @Html.ValidationMessageFor(model => model.Moneda, "", new { @class = "text-danger" })
                        </div>

                        @if (Model.TipoCambio != null)
                        {
        <div class="form-group col-xs-12 col-sm-6 col-md-4 col-lg-3">
            @Html.LabelFor(model => model.TipoCambio, htmlAttributes: new { @class = "form-label" })
            @Html.EditorFor(model => model.TipoCambio, new { htmlAttributes = new { @class = "form-control mb-2", @readonly = "readonly" } })
            @Html.ValidationMessageFor(model => model.TipoCambio, "", new { @class = "text-danger" })
        </div>      }

                        <div class="clearfix"></div>

                        <div class="sub-title">
                            <span class="fa fa-bars text-muted"></span> Totales
                        </div>

                        <hr />

                        <div class="form-group col-xs-12 col-sm-6 col-md-4 col-lg-3">
                            @Html.LabelFor(model => model.Subtotal, htmlAttributes: new { @class = "form-label" })
                            @Html.EditorFor(model => model.Subtotal, new { htmlAttributes = new { @class = "form-control mb-2", @readonly = "readonly" } })
                            @Html.ValidationMessageFor(model => model.Subtotal, "", new { @class = "text-danger" })
                        </div>

                        <div class="form-group col-xs-12 col-sm-6 col-md-4 col-lg-3">
                            @Html.LabelFor(model => model.Total, htmlAttributes: new { @class = "form-label" })
                            @Html.EditorFor(model => model.Total, new { htmlAttributes = new { @class = "form-control mb-2", @readonly = "readonly" } })
                            @Html.ValidationMessageFor(model => model.Total, "", new { @class = "text-danger" })
                        </div>
                    </div>}


        <div class="row">
            <div class="panel-heading">
                Validación
            </div>

            <div class="sub-title">
                <span class="fa fa-bars text-muted"></span> Integridad de Datos
            </div>

            <div class="separator my-5"></div>

            <div class="form-group col-xs-12 col-sm-6 col-md-4 col-lg-3">
                @Html.LabelFor(model => model.Validacion.TotalCorrecto, htmlAttributes: new { @class = "form-label" })
                <div class="checkbox">
                    @Html.EditorFor(model => model.Validacion.TotalCorrecto, new { htmlAttributes = new { @class = "form-check-input", @readonly = "readonly" } })
                    @Html.ValidationMessageFor(model => model.Validacion.TotalCorrecto, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group col-xs-12 col-sm-6 col-md-4 col-lg-3">
                @Html.LabelFor(model => model.Validacion.SubtotalCorrecto, htmlAttributes: new { @class = "form-label" })
                <div class="checkbox">
                    @Html.EditorFor(model => model.Validacion.SubtotalCorrecto, new { htmlAttributes = new { @class = "form-check-input", @readonly = "readonly" } })
                    @Html.ValidationMessageFor(model => model.Validacion.SubtotalCorrecto, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group col-xs-12 col-sm-6 col-md-4 col-lg-3">
                @Html.LabelFor(model => model.Validacion.Total, htmlAttributes: new { @class = "form-label" })
                @Html.EditorFor(model => model.Validacion.Total, new { htmlAttributes = new { @class = "form-control mb-2", @readonly = "readonly" } })
                @Html.ValidationMessageFor(model => model.Validacion.Total, "", new { @class = "text-danger" })
            </div>



            <div class="form-group col-xs-12 col-sm-6 col-md-4 col-lg-3">
                @Html.LabelFor(model => model.Validacion.ConceptosCorrecto, htmlAttributes: new { @class = "form-label" })
                <div class="checkbox">
                    @Html.EditorFor(model => model.Validacion.ConceptosCorrecto, new { htmlAttributes = new { @class = "form-check-input", @readonly = "readonly" } })
                    @Html.ValidationMessageFor(model => model.Validacion.Conceptos, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group col-xs-12 col-sm-6 col-md-4 col-lg-3">
                @Html.LabelFor(model => model.Validacion.Conceptos, htmlAttributes: new { @class = "form-label" })
                @Html.EditorFor(model => model.Validacion.Conceptos, new { htmlAttributes = new { @class = "form-control mb-2", @readonly = "readonly" } })
                @Html.ValidationMessageFor(model => model.Validacion.Conceptos, "", new { @class = "text-danger" })
            </div>



            <div class="form-group col-xs-12 col-sm-6 col-md-4 col-lg-3">
                @Html.LabelFor(model => model.Validacion.RetencionesCorrecto, htmlAttributes: new { @class = "form-label" })
                <div class="checkbox">
                    @Html.EditorFor(model => model.Validacion.RetencionesCorrecto, new { htmlAttributes = new { @class = "form-check-input", @readonly = "readonly" } })
                    @Html.ValidationMessageFor(model => model.Validacion.RetencionesCorrecto, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group col-xs-12 col-sm-6 col-md-4 col-lg-3">
                @Html.LabelFor(model => model.Validacion.Retenciones, htmlAttributes: new { @class = "form-label" })
                @Html.EditorFor(model => model.Validacion.Retenciones, new { htmlAttributes = new { @class = "form-control mb-2", @readonly = "readonly" } })
                @Html.ValidationMessageFor(model => model.Validacion.Retenciones, "", new { @class = "text-danger" })
            </div>



            <div class="form-group col-xs-12 col-sm-6 col-md-4 col-lg-3">
                @Html.LabelFor(model => model.Validacion.TrasladosCorrecto, htmlAttributes: new { @class = "form-label" })
                <div class="checkbox">
                    @Html.EditorFor(model => model.Validacion.TrasladosCorrecto, new { htmlAttributes = new { @class = "form-check-input", @readonly = "readonly" } })
                    @Html.ValidationMessageFor(model => model.Validacion.TrasladosCorrecto, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group col-xs-12 col-sm-6 col-md-4 col-lg-3">
                @Html.LabelFor(model => model.Validacion.Traslados, htmlAttributes: new { @class = "form-label" })
                @Html.EditorFor(model => model.Validacion.Traslados, new { htmlAttributes = new { @class = "form-control mb-2", @readonly = "readonly" } })
                @Html.ValidationMessageFor(model => model.Validacion.Traslados, "", new { @class = "text-danger" })
            </div>



            <div class="form-group col-xs-12 col-sm-6 col-md-4 col-lg-3">
                @Html.LabelFor(model => model.Validacion.RetencionesLocalesCorrecto, htmlAttributes: new { @class = "form-label" })
                <div class="checkbox">
                    @Html.EditorFor(model => model.Validacion.RetencionesLocalesCorrecto, new { htmlAttributes = new { @class = "form-check-input", @readonly = "readonly" } })
                    @Html.ValidationMessageFor(model => model.Validacion.RetencionesLocalesCorrecto, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group col-xs-12 col-sm-6 col-md-4 col-lg-3">
                @Html.LabelFor(model => model.Validacion.RetencionesLocales, htmlAttributes: new { @class = "form-label" })
                @Html.EditorFor(model => model.Validacion.RetencionesLocales, new { htmlAttributes = new { @class = "form-control mb-2", @readonly = "readonly" } })
                @Html.ValidationMessageFor(model => model.Validacion.RetencionesLocales, "", new { @class = "text-danger" })
            </div>



            <div class="form-group col-xs-12 col-sm-6 col-md-4 col-lg-3">
                @Html.LabelFor(model => model.Validacion.TrasladosLocalesCorrecto, htmlAttributes: new { @class = "form-label" })
                <div class="checkbox">
                    @Html.EditorFor(model => model.Validacion.TrasladosLocalesCorrecto, new { htmlAttributes = new { @class = "form-check-input", @readonly = "readonly" } })
                    @Html.ValidationMessageFor(model => model.Validacion.TrasladosLocalesCorrecto, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group col-xs-12 col-sm-6 col-md-4 col-lg-3">
                @Html.LabelFor(model => model.Validacion.TrasladosLocales, htmlAttributes: new { @class = "form-label" })
                @Html.EditorFor(model => model.Validacion.TrasladosLocales, new { htmlAttributes = new { @class = "form-control mb-2", @readonly = "readonly" } })
                @Html.ValidationMessageFor(model => model.Validacion.TrasladosLocales, "", new { @class = "text-danger" })
            </div>



            <div class="sub-title">
                <span class="fa fa-bars text-muted"></span> Validación de XML
            </div>

            <div class="separator my-5"></div>

            <div class="form-group col-xs-12 col-sm-6 col-md-4 col-lg-3">
                @Html.LabelFor(model => model.Validacion.EsquemaCorrecto, htmlAttributes: new { @class = "form-label" })

                @Html.EditorFor(model => model.Validacion.EsquemaCorrecto, new { htmlAttributes = new { @class = "form-check-input", @readonly = "readonly" } })
                @Html.ValidationMessageFor(model => model.Validacion.EsquemaCorrecto, "", new { @class = "text-danger" })

            </div>

            <div class="form-group col-xs-12 col-sm-6 col-md-4 col-lg-3">
                @Html.LabelFor(model => model.Validacion.Esquema, htmlAttributes: new { @class = "form-label" })
                @Html.EditorFor(model => model.Validacion.Esquema, new { htmlAttributes = new { @class = "form-control mb-2", @readonly = "readonly" } })
                @Html.ValidationMessageFor(model => model.Validacion.Esquema, "", new { @class = "text-danger" })
            </div>



            <div class="form-group col-xs-12 col-sm-6 col-md-4 col-lg-3">
                @Html.LabelFor(model => model.Validacion.SelloCfdiValido, htmlAttributes: new { @class = "form-label" })
                <div class="checkbox">
                    @Html.EditorFor(model => model.Validacion.SelloCfdiValido, new { htmlAttributes = new { @class = "form-check-input", @readonly = "readonly" } })
                    @Html.ValidationMessageFor(model => model.Validacion.SelloCfdiValido, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group col-xs-12 col-sm-6 col-md-4 col-lg-3">
                @Html.LabelFor(model => model.Validacion.SelloCfdi, htmlAttributes: new { @class = "form-label" })
                @Html.EditorFor(model => model.Validacion.SelloCfdi, new { htmlAttributes = new { @class = "form-control mb-2", @readonly = "readonly" } })
                @Html.ValidationMessageFor(model => model.Validacion.SelloCfdi, "", new { @class = "text-danger" })
            </div>


            <div class="form-group col-xs-12 col-sm-6 col-md-4 col-lg-3">
                @Html.LabelFor(model => model.Validacion.SelloSatValido, htmlAttributes: new { @class = "form-label" })
                <div class="checkbox">
                    @Html.EditorFor(model => model.Validacion.SelloSatValido, new { htmlAttributes = new { @class = "form-check-input", @readonly = "readonly" } })
                    @Html.ValidationMessageFor(model => model.Validacion.SelloSatValido, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group col-xs-12 col-sm-6 col-md-4 col-lg-3">
                @Html.LabelFor(model => model.Validacion.SelloSat, htmlAttributes: new { @class = "form-label" })
                @Html.EditorFor(model => model.Validacion.SelloSat, new { htmlAttributes = new { @class = "form-control mb-2", @readonly = "readonly" } })
                @Html.ValidationMessageFor(model => model.Validacion.SelloSat, "", new { @class = "text-danger" })
            </div>


            <div class="form-group col-xs-12 col-sm-6 col-md-4 col-lg-3">
                @Html.LabelFor(model => model.Validacion.Cifrado, htmlAttributes: new { @class = "form-label" })
                @Html.EditorFor(model => model.Validacion.Cifrado, new { htmlAttributes = new { @class = "form-control mb-2", @readonly = "readonly" } })
                @Html.ValidationMessageFor(model => model.Validacion.Cifrado, "", new { @class = "text-danger" })
            </div>

            <div class="form-group col-xs-12 col-sm-6 col-md-4 col-lg-3">
                @Html.LabelFor(model => model.Validacion.CadenaOriginal, htmlAttributes: new { @class = "form-label" })
                @Html.EditorFor(model => model.Validacion.CadenaOriginal, new { htmlAttributes = new { @class = "form-control mb-2", @readonly = "readonly" } })
                @Html.ValidationMessageFor(model => model.Validacion.CadenaOriginal, "", new { @class = "text-danger" })
            </div>

            <div class="form-group col-xs-12 col-sm-6 col-md-4 col-lg-3">
                @Html.LabelFor(model => model.Validacion.DigestionCadenaOriginal, htmlAttributes: new { @class = "form-label" })
                @Html.EditorFor(model => model.Validacion.DigestionCadenaOriginal, new { htmlAttributes = new { @class = "form-control mb-2", @readonly = "readonly" } })
                @Html.ValidationMessageFor(model => model.Validacion.DigestionCadenaOriginal, "", new { @class = "text-danger" })
            </div>

            <div class="form-group col-xs-12 col-sm-6 col-md-4 col-lg-3">
                @Html.LabelFor(model => model.Validacion.NumeroCertificadoSat, htmlAttributes: new { @class = "form-label" })
                @Html.EditorFor(model => model.Validacion.NumeroCertificadoSat, new { htmlAttributes = new { @class = "form-control mb-2", @readonly = "readonly" } })
                @Html.ValidationMessageFor(model => model.Validacion.NumeroCertificadoSat, "", new { @class = "text-danger" })
            </div>

            <div class="form-group col-xs-12 col-sm-6 col-md-4 col-lg-3">
                @Html.LabelFor(model => model.Validacion.CadenaSat, htmlAttributes: new { @class = "form-label" })
                @Html.EditorFor(model => model.Validacion.CadenaSat, new { htmlAttributes = new { @class = "form-control mb-2", @readonly = "readonly" } })
                @Html.ValidationMessageFor(model => model.Validacion.CadenaSat, "", new { @class = "text-danger" })
            </div>

            <div class="form-group col-xs-12 col-sm-6 col-md-4 col-lg-3">
                @Html.LabelFor(model => model.Validacion.DigestionCadenaSat, htmlAttributes: new { @class = "form-label" })
                @Html.EditorFor(model => model.Validacion.DigestionCadenaSat, new { htmlAttributes = new { @class = "form-control mb-2", @readonly = "readonly" } })
                @Html.ValidationMessageFor(model => model.Validacion.DigestionCadenaSat, "", new { @class = "text-danger" })
            </div>


            <div class="sub-title">
                <span class="fa fa-bars text-muted"></span> Certificado
            </div>

            <div class="separator my-5"></div>

            <div class="form-group col-xs-12 col-sm-6 col-md-4 col-lg-3">
                @Html.LabelFor(model => model.Validacion.SelloCfdiValido, htmlAttributes: new { @class = "form-label" })

                @Html.EditorFor(model => model.Validacion.SelloCfdiValido, new { htmlAttributes = new { @class = "form-check-input", @readonly = "readonly" } })
                @Html.ValidationMessageFor(model => model.Validacion.SelloCfdiValido, "", new { @class = "text-danger" })

            </div>

            <div class="form-group col-xs-12 col-sm-6 col-md-4 col-lg-3">
                @Html.LabelFor(model => model.Validacion.SelloCfdiValido, htmlAttributes: new { @class = "form-label" })

                @Html.EditorFor(model => model.Validacion.SelloCfdiValido, new { htmlAttributes = new { @class = "form-check-input", @readonly = "readonly" } })
                @Html.ValidationMessageFor(model => model.Validacion.SelloCfdiValido, "", new { @class = "text-danger" })

            </div>


            <div class="sub-title">
                <span class="fa fa-bars text-muted"></span> Información del SAT
            </div>

            <div class="separator my-5"></div>

            <div class="form-group col-xs-12 col-sm-6 col-md-4 col-lg-3">
                @Html.LabelFor(model => model.Validacion.DescripcionSat, htmlAttributes: new { @class = "form-label" })
                @Html.EditorFor(model => model.Validacion.DescripcionSat, new { htmlAttributes = new { @class = "form-control mb-2", @readonly = "readonly" } })
                @Html.ValidationMessageFor(model => model.Validacion.DescripcionSat, "", new { @class = "text-danger" })
            </div>

            <div class="form-group col-xs-12 col-sm-6 col-md-4 col-lg-3">
                @Html.LabelFor(model => model.Validacion.EstadoSat, htmlAttributes: new { @class = "form-label" })
                @Html.EditorFor(model => model.Validacion.EstadoSat, new { htmlAttributes = new { @class = "form-control mb-2", @readonly = "readonly" } })
                @Html.ValidationMessageFor(model => model.Validacion.EstadoSat, "", new { @class = "text-danger" })
            </div>

            <div class="form-group col-xs-12 col-sm-6 col-md-4 col-lg-3">
                @Html.LabelFor(model => model.Validacion.EntidadCertificadora, htmlAttributes: new { @class = "form-label" })
                @Html.EditorFor(model => model.Validacion.EntidadCertificadora, new { htmlAttributes = new { @class = "form-control mb-2", @readonly = "readonly" } })
                @Html.ValidationMessageFor(model => model.Validacion.EntidadCertificadora, "", new { @class = "text-danger" })
            </div>



            <div class="sub-title">
                <span class="fa fa-bars text-muted"></span> Información de Addenda
            </div>

            <div class="separator my-5"></div>

            <div class="form-group col-xs-12 col-sm-6 col-md-4 col-lg-3">
                @Html.LabelFor(model => model.Validacion.ExisteAddenda, htmlAttributes: new { @class = "form-label" })
                <div class="checkbox">
                    @Html.EditorFor(model => model.Validacion.ExisteAddenda, new { htmlAttributes = new { @class = "form-check-input", @readonly = "readonly" } })
                    @Html.ValidationMessageFor(model => model.Validacion.ExisteAddenda, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group col-xs-12 col-sm-6 col-md-4 col-lg-3">
                @Html.LabelFor(model => model.Validacion.AddendaCorrecto, htmlAttributes: new { @class = "form-label" })
                <div class="checkbox">
                    @Html.EditorFor(model => model.Validacion.AddendaCorrecto, new { htmlAttributes = new { @class = "form-check-input", @readonly = "readonly" } })
                    @Html.ValidationMessageFor(model => model.Validacion.AddendaCorrecto, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group col-xs-12 col-sm-6 col-md-4 col-lg-3">
                @Html.LabelFor(model => model.Validacion.DetallesAddenda, htmlAttributes: new { @class = "form-label" })
                @Html.EditorFor(model => model.Validacion.DetallesAddenda, new { htmlAttributes = new { @class = "form-control mb-2", @readonly = "readonly" } })
                @Html.ValidationMessageFor(model => model.Validacion.DetallesAddenda, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="clearfix"></div>
        <div class="separator my-5"></div>
        <div class="d-flex justify-content-end">
            <!--begin::Button-->
            <a href="@Url.Action("VerTodos", " OperacionesCfdisRecibidos")" class="btn btn-light me-5">Cancelar</a>
            <!--end::Button-->
        </div>
    </div>
</div>

