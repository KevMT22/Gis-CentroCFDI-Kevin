@model API.Operaciones.ComplementosPagos.ComplementoPago

@{
    ViewBag.Title = "Facturas";
}

@Html.Partial("_ComplementosPagosScripts")


<div class="card card-flush">
    <!--begin::Card header-->
    <div class="card-header">
        <div class="card-title">
            <h2>Asignar documentos relacionados a los pagos</h2>
        </div>
    </div>
    <!--end::Card header-->
    <div class="card-body pt-0">
        <div class="row">
            @using (Html.BeginForm())
            {
@Html.AntiForgeryToken()
                @Html.HiddenFor(model => model.Id)
                                @Html.HiddenFor(model => model.SucursalId)
                                                @Html.HiddenFor(model => model.FechaDocumento)
                                                                @Html.HiddenFor(model => model.ReceptorId)

            <div class="form row">
                @Html.ValidationSummary(true, "", new { @class = "label-blue-alt" })

                <h3 class="title-hero">
                    Información del Cliente y CFDi
                </h3>

                <div class="form-group col-xs-12 col-sm-6 col-md-4 col-lg-4">
                    <label class="form-label">Fecha Emisión</label>
                    @Html.EditorFor(model => model.FechaDocumento, new { htmlAttributes = new { @class = "form-control mb-2", @readonly = "readonly" } })
                    @Html.ValidationMessageFor(model => model.FechaDocumento, "", new { @class = "text-danger" })
                </div>

                <div class="form-group col-xs-12 col-sm-6 col-md-4 col-lg-4">
                    @Html.LabelFor(model => model.ReceptorId, htmlAttributes: new { @class = "form-label" })
                    @Html.EditorFor(model => model.Receptor.RazonSocial, new { htmlAttributes = new { @class = "form-control mb-2", @readonly = "readonly" } })
                    @Html.ValidationMessageFor(model => model.ReceptorId, "", new { @class = "text-danger" })
                </div>

                <div class="form-group col-xs-12 col-sm-6 col-md-4 col-lg-4">
                    @Html.LabelFor(model => model.Version, htmlAttributes: new { @class = "form-label" })
                    @Html.EditorFor(model => model.Version, new { htmlAttributes = new { @class = "form-control mb-2", @readonly = "readonly" } })
                    @Html.ValidationMessageFor(model => model.Version, "", new { @class = "text-danger" })
                </div>

                <div class="clearfix"></div>

                <div class="card shadow-sm">
                    <div class="card-header">
                        <h3 class="card-title">
                            Agregar Pago
                        </h3>
                        <div class="card-toolbar">
                            <a href="#" class="icon-separator" id="agregarDetalleDocRelacionado" onclick="agregarFactura()">
                                <!--begin::Svg Icon -->
                                <span class="svg-icon svg-icon-3x">
                                    <img src="~/_CDN/assets/media/icons/duotune/general/gen041.svg" width="40" height="40" />
                                </span>
                                <!--end::Svg Icon-->
                            </a>
                        </div>
                    </div>

                    <div class="card-body row">
                        <div class="form-group col-xs-12 col-sm-6">
                            <label class="form-label">Asignar documentos relacionados</label>
                            @Html.DropDownList("PagoId", null, "Favor de hacer su selección", new { @class = "form-select mb-2" })
                            @Html.ValidationMessageFor(model => model.Pago.Desplegado, "", new { @class = "text-danger" })
                        </div>
                        <div class="form-group col-xs-12 col-sm-2">
                            <label class="form-label">Imp Saldo Anterior</label>
                            @Html.EditorFor(model => model.Pago.DocumentoRelacionado.ImporteSaldoAnterior, new { htmlAttributes = new { @class = "form-control dinero2" } })
                            @Html.ValidationMessageFor(model => model.Pago.DocumentoRelacionado.ImporteSaldoAnterior, "", new { @class = "text-danger" })
                        </div>

                        <div class="form-group col-xs-12 col-sm-2">
                            <label class="form-label">Imp Pagado</label>
                            @Html.EditorFor(model => model.Pago.DocumentoRelacionado.ImportePagado, new { htmlAttributes = new { @class = "form-control dinero2" } })
                            @Html.ValidationMessageFor(model => model.Pago.DocumentoRelacionado.ImportePagado, "", new { @class = "text-danger" })
                        </div>

                        <div class="form-group col-xs-12 col-sm-2">
                            <label class="form-label">Imp Insoluto</label>
                            @Html.EditorFor(model => model.Pago.DocumentoRelacionado.ImporteSaldoInsoluto, new { htmlAttributes = new { @class = "form-control dinero2" } })
                            @Html.ValidationMessageFor(model => model.Pago.DocumentoRelacionado.ImporteSaldoInsoluto, "", new { @class = "text-danger" })
                        </div>
                        <div class="form-group col-xs-12 col-sm-6">
                            @Html.LabelFor(model => model.Pago.DocumentoRelacionado.FacturaEmitidaId, new { @class = "form-label" })
                            @Html.DropDownList("FacturaEmitidaId", null, "Favor de hacer su selección", new { @class = "form-select mb-2", @data_control = "select2" })
                            @Html.ValidationMessageFor(model => model.Pago.DocumentoRelacionado.FacturaEmitidaId, "", new { @class = "text-danger" })
                        </div>

                        <div class="form-group col-xs-12 col-sm-3">
                            <label class="form-label">Num Parcialidad</label>
                            @Html.EditorFor(model => model.Pago.DocumentoRelacionado.NumeroParcialidad, new { htmlAttributes = new { @class = "form-control mb-2" } })
                            @Html.ValidationMessageFor(model => model.Pago.DocumentoRelacionado.NumeroParcialidad, "", new { @class = "text-danger" })
                        </div>

                        <div class="form-group col-xs-12 col-sm-3">
                            @Html.LabelFor(model => model.Pago.DocumentoRelacionado.Moneda, new { @class = "form-label" })
                            @Html.EnumDropDownListFor(model => model.Pago.DocumentoRelacionado.Moneda, new { @class = "form-select mb-2", @data_control = "select2" })
                            @Html.ValidationMessageFor(model => model.Pago.DocumentoRelacionado.Moneda, "", new { @class = "text-danger" })
                        </div>

                        <div class="form-group col-xs-12 col-sm-2">
                            @Html.LabelFor(model => model.Pago.DocumentoRelacionado.EquivalenciaDR, new { @class = "form-label" })
                            @Html.EditorFor(model => model.Pago.DocumentoRelacionado.EquivalenciaDR, new { htmlAttributes = new { @class = "form-control mb-2" } })
                            @Html.ValidationMessageFor(model => model.Pago.DocumentoRelacionado.EquivalenciaDR, "", new { @class = "text-danger" })

                        </div>
                        <div class="form-group col-xs-12 col-sm-2">
                            <a href="" style="position:relative;top:30px;" class="calculaEquivalencia">
                                <!--begin::Svg Icon | path: /var/www/preview.keenthemes.com/kt-products/docs/metronic/html/releases/2022-12-26-231111/core/html/src/media/icons/duotune/arrows/arr031.svg-->
                                <span class="svg-icon svg-icon-2hx svg-icon-primary">
                                    <svg width="23" height="24" viewBox="0 0 23 24" fill="none" xmlns="http://www.w3.org/2000/svg">
                                        <path d="M21 13V13.5C21 16 19 18 16.5 18H5.6V16H16.5C17.9 16 19 14.9 19 13.5V13C19 12.4 19.4 12 20 12C20.6 12 21 12.4 21 13ZM18.4 6H7.5C5 6 3 8 3 10.5V11C3 11.6 3.4 12 4 12C4.6 12 5 11.6 5 11V10.5C5 9.1 6.1 8 7.5 8H18.4V6Z" fill="currentColor" />
                                        <path opacity="0.3" d="M21.7 6.29999C22.1 6.69999 22.1 7.30001 21.7 7.70001L18.4 11V3L21.7 6.29999ZM2.3 16.3C1.9 16.7 1.9 17.3 2.3 17.7L5.6 21V13L2.3 16.3Z" fill="currentColor" />
                                    </svg>
                                </span>
                                <!--end::Svg Icon-->
                            </a>
                        </div>
                        <div class="form-group col-xs-12 col-sm-3 ObjetoImpuesto hiddenDiv" style="position:relative;top:20px;right:50px;">
                            @Html.LabelFor(model => model.Pago.DocumentoRelacionado.ObjetoImpuesto, new { @class = "form-label" })
                            <p id="DescripcionObjetoImpuesto"></p>
                            @Html.HiddenFor(model => model.Pago.DocumentoRelacionado.ObjetoImpuesto)
                            @Html.ValidationMessageFor(model => model.Pago.DocumentoRelacionado.ObjetoImpuesto, "", new { @class = "text-danger" })
                        </div>
                        <div class="clearfix"></div>
                        <div class="validacion-traslado hiddenDiv">
                            <div class="card shadow-sm">
                                <div class="card-body row">
                                    <h3 class="title-hero">
                                        Traslado
                                    </h3>
                                    <div class="row">
                                        <div class="col-xs-12">
                                            <div class="content-box">
                                                <div class="content-box-wrapper">
                                                    <div>
                                                        <div class="row" id="detallesTraslado">
                                                            @if (Model.Pago.DocumentoRelacionado.Traslados != null)
                                                            {
                                                                foreach (var traslados in Model.Pago.DocumentoRelacionado.Traslados)
                                                                {
                                            @Html.Partial("~/Views/ComplementosPagos/TrasladoDR.cshtml", traslados)}
                                    }
                                                            <div class="separator my-5"></div>
                                                        </div>
                                                    </div>
                                                </div>
                                            </div>
                                        </div>
                                        <div class="clearfix"></div>
                                    </div>
                                </div>
                            </div>
                        </div>
                        <div class="clearfix"></div>

                        <div class="validacion-retencion hiddenDiv">
                            <!--hiddenDiv-->
                            <div class="card shadow-sm">
                                <div class="card-body row">
                                    <h3 class="title-hero">
                                        Retencion
                                    </h3>
                                    <div class="row">
                                        <div class="col-xs-12">
                                            <div class="content-box">

                                                <div class="content-box-wrapper">
                                                    <div>
                                                        <div class="row" id="detallesRetencion">
                                                            @if (Model.Pago.DocumentoRelacionado.Retenciones != null)
                                                            {
                                                                foreach (var retenciones in Model.Pago.DocumentoRelacionado.Retenciones)
                                                                {
                                            @Html.Partial("~/Views/ComplementosPagos/RetencionDR.cshtml", retenciones)}
                                                            }
                                                            <div class="separator my-5"></div>
                                                        </div>
                                                    </div>
                                                </div>
                                            </div>
                                        </div>
                                        <div class="clearfix"></div>
                                    </div>
                                </div>
                            </div>
                        </div>

                        @if (Model.Pagos != null)
                        {
                            var i = 0;
                            foreach (var pago in Model.Pagos)
                            {
                                i++;

                    <div class="clearfix"></div>

                                            <div class="col-xs-12">
                                                <div class="card shadow-sm">
                                                    <div class="card-header">
                                                        <h3 class="card-title form-label">
                                                            <span class="font-blue">
                                                                @i -
                                                            </span>

                                                            @pago.Desplegado
                                                        </h3>
                                                    </div>
                                                    <div class="card-body">
                                                        <div class="form-group col-xs-12 col-sm-6 col-md-4 col-lg-3 hiddenDiv">
                                                            @Html.LabelFor(model => model.Pago.Monto, htmlAttributes: new { @class = "form-label" })
                                                            @Html.EditorFor(model => model.Pago.Monto, new { htmlAttributes = new { @class = "form-control mb-2", @readonly = "readonly" } })
                                                            @Html.ValidationMessageFor(model => model.Pago.Monto, "", new { @class = "text-danger" })
                                                        </div>

                                                        <div class="form-group col-xs-12 col-sm-6 col-md-4 col-lg-3 hiddenDiv">
                                                            @Html.LabelFor(model => model.Pago.FechaPago, htmlAttributes: new { @class = "form-label" })
                                                            @Html.EditorFor(model => model.Pago.FechaPago, new { htmlAttributes = new { @class = "form-control mb-2", @readonly = "readonly" } })
                                                            @Html.ValidationMessageFor(model => model.Pago.FechaPago, "", new { @class = "text-danger" })
                                                        </div>

                                                        <div class="form-group col-xs-12 col-sm-6 col-md-4 col-lg-3 hiddenDiv">
                                                            @Html.LabelFor(model => model.Pago.Moneda, htmlAttributes: new { @class = "form-label" })
                                                            @Html.EditorFor(model => model.Pago.Moneda, new { htmlAttributes = new { @class = "form-control mb-2", @readonly = "readonly" } })
                                                            @Html.ValidationMessageFor(model => model.Pago.Moneda, "", new { @class = "text-danger" })
                                                        </div>

                                                        <div class="row" id="@String.Format("documento{0}", pago.Id)">
                                                            @if (pago.DocumentosRelacionados != null)
                                                            {
                                                                foreach (var documentoRelacionado in pago.DocumentosRelacionados)
                                                                {
                                    @Html.Partial("~/Views/ComplementosPagos/FacturasDetalles.cshtml", documentoRelacionado)}
                            }
                                                        </div>
                                                    </div>
                                                </div>
                                            </div>
                                                                    <div class="clearfix"></div><br />}
                                                            }
                    </div>

                            <div class="clearfix"></div>

                        </div>

                <div class="clearfix"></div>

                <div class="separator my-5"></div>

                <div class="d-flex justify-content-end">
                    <!--begin::Button-->
                    <a href="@Url.Action("Index", ViewBag.Controller)" class="btn btn-light me-5">Cancelar</a>
                    <!--end::Button-->
                    
                    <button type="submit" class="btn btn-primary">
                        <span class="indicator-label">Guardar</span>
                    </button>
                </div>

            </div>}

        </div>
    </div>
</div>